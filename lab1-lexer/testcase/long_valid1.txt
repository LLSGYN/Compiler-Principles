< keyword, extern >
< keyword, char >
< identifier, filepath >
< operator, [ >
< integer, 50 >
< operator, ] >
< operator, ; >
< keyword, extern >
< keyword, char >
< identifier, dnsServerIP >
< operator, [ >
< integer, 16 >
< operator, ] >
< operator, ; >
< keyword, extern >
< keyword, int >
< identifier, debugLevel >
< operator, ; >
< keyword, int >
< identifier, judgeIPorPath >
< operator, ( >
< keyword, const >
< keyword, char >
< operator, * >
< identifier, temp >
< operator, ) >
< operator, { >
< keyword, int >
< identifier, len >
< operator, = >
< identifier, strlen >
< operator, ( >
< identifier, temp >
< operator, ) >
< operator, ; >
< keyword, for >
< operator, ( >
< keyword, int >
< identifier, i >
< operator, = >
< integer, 0 >
< operator, ; >
< identifier, i >
< operator, < >
< identifier, len >
< operator, ; >
< operator, ) >
< operator, { >
< keyword, if >
< operator, ( >
< identifier, temp >
< operator, [ >
< identifier, i >
< operator, ] >
< operator, == >
< character literal, . >
< operator, || >
< operator, ( >
< identifier, temp >
< operator, [ >
< identifier, i >
< operator, ] >
< operator, >= >
< character literal, 0 >
< operator, && >
< identifier, temp >
< operator, [ >
< identifier, i >
< operator, ] >
< operator, <= >
< character literal, 9 >
< operator, ) >
< operator, ) >
< identifier, i >
< operator, ++ >
< operator, ; >
< keyword, else >
< keyword, return >
< integer, 1 >
< operator, ; >
< operator, } >
< keyword, return >
< integer, 0 >
< operator, ; >
< operator, } >
< keyword, void >
< identifier, paraIns >
< operator, ( >
< keyword, int >
< identifier, argc >
< operator, , >
< keyword, char >
< operator, * >
< operator, * >
< identifier, argv >
< operator, ) >
< operator, { >
< keyword, switch >
< operator, ( >
< identifier, argc >
< operator, ) >
< operator, { >
< keyword, case >
< integer, 1 >
< operator, : >
< keyword, break >
< operator, ; >
< keyword, case >
< integer, 2 >
< operator, : >
< keyword, if >
< operator, ( >
< identifier, strcmp >
< operator, ( >
< identifier, argv >
< operator, [ >
< integer, 1 >
< operator, ] >
< operator, , >
< string literal, -d >
< operator, ) >
< operator, == >
< integer, 0 >
< operator, ) >
< identifier, debugLevel >
< operator, = >
< integer, 1 >
< operator, ; >
< keyword, else >
< keyword, if >
< operator, ( >
< identifier, strcmp >
< operator, ( >
< identifier, argv >
< operator, [ >
< integer, 1 >
< operator, ] >
< operator, , >
< string literal, -dd >
< operator, ) >
< operator, == >
< integer, 0 >
< operator, ) >
< identifier, debugLevel >
< operator, = >
< integer, 2 >
< operator, ; >
< keyword, else >
< keyword, if >
< operator, ( >
< identifier, judgeIPorPath >
< operator, ( >
< identifier, argv >
< operator, [ >
< integer, 1 >
< operator, ] >
< operator, ) >
< operator, == >
< integer, 0 >
< operator, ) >
< identifier, strcpy >
< operator, ( >
< identifier, dnsServerIP >
< operator, , >
< identifier, argv >
< operator, [ >
< integer, 1 >
< operator, ] >
< operator, ) >
< operator, ; >
< keyword, else >
< identifier, strcpy >
< operator, ( >
< identifier, filepath >
< operator, , >
< identifier, argv >
< operator, [ >
< integer, 1 >
< operator, ] >
< operator, ) >
< operator, ; >
< keyword, break >
< operator, ; >
< keyword, case >
< integer, 3 >
< operator, : >
< keyword, if >
< operator, ( >
< identifier, strcmp >
< operator, ( >
< identifier, argv >
< operator, [ >
< integer, 1 >
< operator, ] >
< operator, , >
< string literal, -d >
< operator, ) >
< operator, == >
< integer, 0 >
< operator, ) >
< identifier, debugLevel >
< operator, = >
< integer, 1 >
< operator, ; >
< keyword, else >
< keyword, if >
< operator, ( >
< identifier, strcmp >
< operator, ( >
< identifier, argv >
< operator, [ >
< integer, 1 >
< operator, ] >
< operator, , >
< string literal, -dd >
< operator, ) >
< operator, == >
< integer, 0 >
< operator, ) >
< identifier, debugLevel >
< operator, = >
< integer, 2 >
< operator, ; >
< keyword, else >
< identifier, strcpy >
< operator, ( >
< identifier, dnsServerIP >
< operator, , >
< identifier, argv >
< operator, [ >
< integer, 1 >
< operator, ] >
< operator, ) >
< operator, ; >
< keyword, if >
< operator, ( >
< identifier, judgeIPorPath >
< operator, ( >
< identifier, argv >
< operator, [ >
< integer, 2 >
< operator, ] >
< operator, ) >
< operator, == >
< integer, 1 >
< operator, ) >
< identifier, strcpy >
< operator, ( >
< identifier, filepath >
< operator, , >
< identifier, argv >
< operator, [ >
< integer, 2 >
< operator, ] >
< operator, ) >
< operator, ; >
< keyword, else >
< identifier, strcpy >
< operator, ( >
< identifier, dnsServerIP >
< operator, , >
< identifier, argv >
< operator, [ >
< integer, 2 >
< operator, ] >
< operator, ) >
< operator, ; >
< keyword, break >
< operator, ; >
< keyword, case >
< integer, 4 >
< operator, : >
< keyword, if >
< operator, ( >
< identifier, strcmp >
< operator, ( >
< identifier, argv >
< operator, [ >
< integer, 1 >
< operator, ] >
< operator, , >
< string literal, -d >
< operator, ) >
< operator, == >
< integer, 0 >
< operator, ) >
< identifier, debugLevel >
< operator, = >
< integer, 1 >
< operator, ; >
< keyword, else >
< keyword, if >
< operator, ( >
< identifier, strcmp >
< operator, ( >
< identifier, argv >
< operator, [ >
< integer, 1 >
< operator, ] >
< operator, , >
< string literal, -dd >
< operator, ) >
< operator, == >
< integer, 0 >
< operator, ) >
< identifier, debugLevel >
< operator, = >
< integer, 2 >
< operator, ; >
< identifier, strcpy >
< operator, ( >
< identifier, dnsServerIP >
< operator, , >
< identifier, argv >
< operator, [ >
< integer, 2 >
< operator, ] >
< operator, ) >
< operator, ; >
< identifier, strcpy >
< operator, ( >
< identifier, filepath >
< operator, , >
< identifier, argv >
< operator, [ >
< integer, 3 >
< operator, ] >
< operator, ) >
< operator, ; >
< keyword, break >
< operator, ; >
< identifier, default >
< operator, : >
< identifier, printf >
< operator, ( >
< string literal, Wrong instruction!
 >
< operator, ) >
< operator, ; >
< operator, } >
< operator, } >
< keyword, void >
< identifier, dealWithContext >
< operator, ( >
< keyword, char >
< operator, * >
< identifier, recvContext >
< operator, , >
< keyword, struct >
< identifier, QSF >
< operator, * >
< identifier, recvd >
< operator, , >
< keyword, int >
< identifier, ret >
< operator, ) >
< operator, { >
< keyword, char >
< identifier, tempchar >
< operator, = >
< integer, 0 >
< operator, ; >
< keyword, int >
< identifier, i >
< operator, = >
< integer, 0 >
< operator, , >
< identifier, j >
< operator, = >
< integer, 0 >
< operator, ; >
< keyword, unsigned >
< keyword, short >
< identifier, temp >
< operator, ; >
< keyword, while >
< operator, ( >
< identifier, i >
< operator, < >
< identifier, ret >
< operator, - >
< integer, 12 >
< operator, ) >
< operator, { >
< keyword, if >
< operator, ( >
< identifier, recvContext >
< operator, [ >
< identifier, i >
< operator, ] >
< operator, > >
< integer, 0 >
< operator, && >
< identifier, recvContext >
< operator, [ >
< identifier, i >
< operator, ] >
< operator, <= >
< integer, 64 >
< operator, ) >
< operator, { >
< identifier, tempchar >
< operator, = >
< identifier, recvContext >
< operator, [ >
< identifier, i >
< operator, ++ >
< operator, ] >
< operator, ; >
< keyword, while >
< operator, ( >
< identifier, tempchar >
< operator, -- >
< operator, != >
< integer, 0 >
< operator, ) >
< identifier, recvd >
< operator, -> >
< identifier, QNAME >
< operator, [ >
< identifier, j >
< operator, ++ >
< operator, ] >
< operator, = >
< identifier, recvContext >
< operator, [ >
< identifier, i >
< operator, ++ >
< operator, ] >
< operator, ; >
< operator, } >
< keyword, if >
< operator, ( >
< identifier, recvContext >
< operator, [ >
< identifier, i >
< operator, ] >
< operator, != >
< integer, 0 >
< operator, ) >
< identifier, recvd >
< operator, -> >
< identifier, QNAME >
< operator, [ >
< identifier, j >
< operator, ++ >
< operator, ] >
< operator, = >
< character literal, . >
< operator, ; >
< keyword, else >
< operator, { >
< identifier, i >
< operator, ++ >
< operator, ; >
< identifier, recvd >
< operator, -> >
< identifier, QNAME >
< operator, [ >
< identifier, j >
< operator, ] >
< operator, = >
< character literal,   >
< operator, ; >
< keyword, break >
< operator, ; >
< operator, } >
< operator, } >
< identifier, memcpy >
< operator, ( >
< operator, & >
< identifier, temp >
< operator, , >
< identifier, recvContext >
< operator, + >
< identifier, i >
< operator, , >
< keyword, sizeof >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, recvd >
< operator, -> >
< identifier, QTYPE >
< operator, = >
< identifier, ntohs >
< operator, ( >
< identifier, temp >
< operator, ) >
< operator, ; >
< identifier, memcpy >
< operator, ( >
< operator, & >
< identifier, temp >
< operator, , >
< identifier, recvContext >
< operator, + >
< identifier, i >
< operator, + >
< integer, 2 >
< operator, , >
< keyword, sizeof >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, recvd >
< operator, -> >
< identifier, QCLASS >
< operator, = >
< identifier, ntohs >
< operator, ( >
< identifier, temp >
< operator, ) >
< operator, ; >
< operator, } >
< keyword, void >
< identifier, dealWithHeader >
< operator, ( >
< keyword, char >
< operator, * >
< identifier, recvBuffer >
< operator, , >
< keyword, struct >
< identifier, HEADER >
< operator, * >
< identifier, recvp >
< operator, ) >
< operator, { >
< keyword, unsigned >
< keyword, short >
< identifier, temp >
< operator, ; >
< identifier, memcpy >
< operator, ( >
< operator, & >
< identifier, temp >
< operator, , >
< identifier, recvBuffer >
< operator, , >
< keyword, sizeof >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, ID >
< operator, = >
< identifier, ntohs >
< operator, ( >
< identifier, temp >
< operator, ) >
< operator, ; >
< identifier, memcpy >
< operator, ( >
< operator, & >
< identifier, temp >
< operator, , >
< identifier, recvBuffer >
< operator, + >
< integer, 2 >
< operator, , >
< keyword, sizeof >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, temp >
< operator, = >
< identifier, ntohs >
< operator, ( >
< identifier, temp >
< operator, ) >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, RCODE >
< operator, = >
< identifier, temp >
< operator, & >
< integer, 15 >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, Z >
< operator, = >
< identifier, temp >
< operator, >> >
< integer, 4 >
< operator, & >
< integer, 7 >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, RA >
< operator, = >
< identifier, temp >
< operator, >> >
< integer, 7 >
< operator, & >
< integer, 1 >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, RD >
< operator, = >
< identifier, temp >
< operator, >> >
< integer, 8 >
< operator, & >
< integer, 1 >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, TC >
< operator, = >
< identifier, temp >
< operator, >> >
< integer, 9 >
< operator, & >
< integer, 1 >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, AA >
< operator, = >
< identifier, temp >
< operator, >> >
< integer, 10 >
< operator, & >
< integer, 1 >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, Opcode >
< operator, = >
< identifier, temp >
< operator, >> >
< integer, 11 >
< operator, & >
< integer, 15 >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, QR >
< operator, = >
< identifier, temp >
< operator, >> >
< integer, 15 >
< operator, & >
< integer, 1 >
< operator, ; >
< identifier, memcpy >
< operator, ( >
< operator, & >
< identifier, temp >
< operator, , >
< identifier, recvBuffer >
< operator, + >
< integer, 4 >
< operator, , >
< keyword, sizeof >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, QDCOUNT >
< operator, = >
< identifier, ntohs >
< operator, ( >
< identifier, temp >
< operator, ) >
< operator, ; >
< identifier, memcpy >
< operator, ( >
< operator, & >
< identifier, temp >
< operator, , >
< identifier, recvBuffer >
< operator, + >
< integer, 6 >
< operator, , >
< keyword, sizeof >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, ANCOUNT >
< operator, = >
< identifier, ntohs >
< operator, ( >
< identifier, temp >
< operator, ) >
< operator, ; >
< identifier, memcpy >
< operator, ( >
< operator, & >
< identifier, temp >
< operator, , >
< identifier, recvBuffer >
< operator, + >
< integer, 8 >
< operator, , >
< keyword, sizeof >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, NSCOUNT >
< operator, = >
< identifier, ntohs >
< operator, ( >
< identifier, temp >
< operator, ) >
< operator, ; >
< identifier, memcpy >
< operator, ( >
< operator, & >
< identifier, temp >
< operator, , >
< identifier, recvBuffer >
< operator, + >
< integer, 10 >
< operator, , >
< keyword, sizeof >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, recvp >
< operator, -> >
< identifier, ARCOUNT >
< operator, = >
< identifier, ntohs >
< operator, ( >
< identifier, temp >
< operator, ) >
< operator, ; >
< operator, } >
< keyword, void >
< identifier, recordCache >
< operator, ( >
< keyword, char >
< operator, * >
< identifier, recvBuffer >
< operator, , >
< identifier, Cache >
< operator, * >
< identifier, cache >
< operator, ) >
< operator, { >
< keyword, unsigned >
< keyword, short >
< identifier, qtype >
< operator, ; >
< keyword, char >
< operator, * >
< identifier, p >
< operator, = >
< identifier, recvBuffer >
< operator, + >
< integer, 12 >
< operator, ; >
< keyword, char >
< identifier, url >
< operator, [ >
< integer, 100 >
< operator, ] >
< operator, ; >
< keyword, struct >
< identifier, ipValue >
< operator, * >
< identifier, ipval >
< operator, = >
< operator, ( >
< keyword, struct >
< identifier, ipValue >
< operator, * >
< operator, ) >
< identifier, malloc >
< operator, ( >
< keyword, sizeof >
< operator, ( >
< keyword, struct >
< identifier, ipValue >
< operator, ) >
< operator, ) >
< operator, , >
< operator, * >
< identifier, prePtr >
< operator, ; >
< identifier, ipval >
< operator, -> >
< identifier, nextval >
< operator, = >
< identifier, NULL >
< operator, ; >
< identifier, prePtr >
< operator, = >
< identifier, ipval >
< operator, ; >
< keyword, int >
< identifier, url_cnt >
< operator, = >
< integer, 0 >
< operator, ; >
< keyword, int >
< identifier, nquery >
< operator, = >
< identifier, ntohs >
< operator, ( >
< operator, * >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, * >
< operator, ) >
< operator, ( >
< identifier, recvBuffer >
< operator, + >
< integer, 4 >
< operator, ) >
< operator, ) >
< operator, ; >
< keyword, int >
< identifier, nresponse >
< operator, = >
< identifier, ntohs >
< operator, ( >
< operator, * >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, * >
< operator, ) >
< operator, ( >
< identifier, recvBuffer >
< operator, + >
< integer, 6 >
< operator, ) >
< operator, ) >
< operator, ; >
< keyword, int >
< identifier, ip1 >
< operator, , >
< identifier, ip2 >
< operator, , >
< identifier, ip3 >
< operator, , >
< identifier, ip4 >
< operator, ; >
< keyword, for >
< operator, ( >
< keyword, int >
< identifier, i >
< operator, = >
< integer, 0 >
< operator, ; >
< identifier, i >
< operator, < >
< identifier, nquery >
< operator, ; >
< identifier, i >
< operator, ++ >
< operator, ) >
< operator, { >
< keyword, while >
< operator, ( >
< operator, * >
< identifier, p >
< operator, > >
< integer, 0 >
< operator, && >
< operator, * >
< identifier, p >
< operator, <= >
< integer, 64 >
< operator, ) >
< operator, { >
< keyword, int >
< identifier, j >
< operator, = >
< operator, * >
< identifier, p >
< operator, ; >
< keyword, while >
< operator, ( >
< identifier, j >
< operator, -- >
< operator, ) >
< identifier, url >
< operator, [ >
< identifier, url_cnt >
< operator, ++ >
< operator, ] >
< operator, = >
< operator, * >
< operator, ( >
< operator, ++ >
< identifier, p >
< operator, ) >
< operator, ; >
< identifier, url >
< operator, [ >
< identifier, url_cnt >
< operator, ++ >
< operator, ] >
< operator, = >
< operator, ( >
< operator, * >
< operator, ( >
< operator, ++ >
< identifier, p >
< operator, ) >
< operator, != >
< integer, 0 >
< operator, ) >
< operator, ? >
< character literal, . >
< operator, : >
< character literal,   >
< operator, ; >
< operator, } >
< identifier, memcpy >
< operator, ( >
< operator, & >
< identifier, qtype >
< operator, , >
< identifier, p >
< operator, + >
< integer, 1 >
< operator, , >
< keyword, sizeof >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, qtype >
< operator, = >
< identifier, ntohs >
< operator, ( >
< identifier, qtype >
< operator, ) >
< operator, ; >
< keyword, if >
< operator, ( >
< identifier, qtype >
< operator, != >
< integer, 1 >
< operator, ) >
< keyword, return >
< operator, ; >
< identifier, p >
< operator, += >
< integer, 5 >
< operator, ; >
< operator, } >
< keyword, if >
< operator, ( >
< identifier, nresponse >
< operator, > >
< integer, 0 >
< operator, && >
< identifier, debugLevel >
< operator, > >
< integer, 1 >
< operator, ) >
< identifier, printf >
< operator, ( >
< string literal, Receive outside %s
 >
< operator, , >
< identifier, url >
< operator, ) >
< operator, ; >
< keyword, int >
< identifier, ca_cnt >
< operator, = >
< integer, 0 >
< operator, ; >
< keyword, for >
< operator, ( >
< keyword, int >
< identifier, i >
< operator, = >
< integer, 0 >
< operator, ; >
< identifier, i >
< operator, < >
< identifier, nresponse >
< operator, ; >
< identifier, i >
< operator, ++ >
< operator, ) >
< operator, { >
< keyword, if >
< operator, ( >
< operator, ( >
< keyword, unsigned >
< keyword, char >
< operator, ) >
< operator, * >
< identifier, p >
< operator, == >
< integer, 192 >
< operator, ) >
< identifier, p >
< operator, += >
< integer, 2 >
< operator, ; >
< keyword, else >
< operator, { >
< keyword, while >
< operator, ( >
< operator, * >
< identifier, p >
< operator, > >
< integer, 0 >
< operator, ) >
< identifier, p >
< operator, += >
< operator, * >
< identifier, p >
< operator, + >
< integer, 1 >
< operator, ; >
< identifier, p >
< operator, += >
< integer, 1 >
< operator, ; >
< operator, } >
< keyword, unsigned >
< keyword, short >
< identifier, resp_type >
< operator, = >
< identifier, ntohs >
< operator, ( >
< operator, * >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, * >
< operator, ) >
< identifier, p >
< operator, ) >
< operator, ; >
< keyword, if >
< operator, ( >
< identifier, resp_type >
< operator, == >
< integer, 1 >
< operator, ) >
< operator, { >
< identifier, p >
< operator, += >
< integer, 10 >
< operator, ; >
< identifier, ca_cnt >
< operator, ++ >
< operator, ; >
< keyword, struct >
< identifier, ipValue >
< operator, * >
< identifier, curPtr >
< operator, = >
< operator, ( >
< keyword, struct >
< identifier, ipValue >
< operator, * >
< operator, ) >
< identifier, malloc >
< operator, ( >
< keyword, sizeof >
< operator, ( >
< keyword, struct >
< identifier, ipValue >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, curPtr >
< operator, -> >
< identifier, nextval >
< operator, = >
< identifier, NULL >
< operator, ; >
< identifier, memset >
< operator, ( >
< identifier, curPtr >
< operator, -> >
< identifier, value >
< operator, , >
< integer, 0 >
< operator, , >
< keyword, sizeof >
< operator, ( >
< identifier, curPtr >
< operator, -> >
< identifier, value >
< operator, ) >
< operator, ) >
< operator, ; >
< identifier, ip1 >
< operator, = >
< operator, ( >
< keyword, unsigned >
< keyword, char >
< operator, ) >
< operator, * >
< identifier, p >
< operator, ++ >
< operator, ; >
< identifier, ip2 >
< operator, = >
< operator, ( >
< keyword, unsigned >
< keyword, char >
< operator, ) >
< operator, * >
< identifier, p >
< operator, ++ >
< operator, ; >
< identifier, ip3 >
< operator, = >
< operator, ( >
< keyword, unsigned >
< keyword, char >
< operator, ) >
< operator, * >
< identifier, p >
< operator, ++ >
< operator, ; >
< identifier, ip4 >
< operator, = >
< operator, ( >
< keyword, unsigned >
< keyword, char >
< operator, ) >
< operator, * >
< identifier, p >
< operator, ++ >
< operator, ; >
< identifier, sprintf >
< operator, ( >
< identifier, curPtr >
< operator, -> >
< identifier, value >
< operator, , >
< string literal, %d.%d.%d.%d >
< operator, , >
< identifier, ip1 >
< operator, , >
< identifier, ip2 >
< operator, , >
< identifier, ip3 >
< operator, , >
< identifier, ip4 >
< operator, ) >
< operator, ; >
< identifier, prePtr >
< operator, -> >
< identifier, nextval >
< operator, = >
< identifier, curPtr >
< operator, ; >
< identifier, prePtr >
< operator, = >
< identifier, curPtr >
< operator, ; >
< keyword, if >
< operator, ( >
< identifier, debugLevel >
< operator, >= >
< integer, 2 >
< operator, ) >
< identifier, printf >
< operator, ( >
< string literal, ip %d.%d.%d.%d
 >
< operator, , >
< identifier, ip1 >
< operator, , >
< identifier, ip2 >
< operator, , >
< identifier, ip3 >
< operator, , >
< identifier, ip4 >
< operator, ) >
< operator, ; >
< operator, } >
< keyword, else >
< operator, { >
< identifier, p >
< operator, += >
< integer, 8 >
< operator, ; >
< keyword, int >
< identifier, datalen >
< operator, = >
< identifier, ntohs >
< operator, ( >
< operator, * >
< operator, ( >
< keyword, unsigned >
< keyword, short >
< operator, * >
< operator, ) >
< identifier, p >
< operator, ) >
< operator, ; >
< identifier, p >
< operator, += >
< integer, 2 >
< operator, ; >
< identifier, p >
< operator, += >
< identifier, datalen >
< operator, ; >
< operator, } >
< operator, } >
< keyword, if >
< operator, ( >
< identifier, ca_cnt >
< operator, == >
< integer, 0 >
< operator, ) >
< keyword, return >
< operator, ; >
< identifier, CacheSet >
< operator, ( >
< identifier, cache >
< operator, , >
< identifier, url >
< operator, , >
< identifier, ipval >
< operator, ) >
< operator, ; >
< identifier, freeValue >
< operator, ( >
< identifier, ipval >
< operator, ) >
< operator, ; >
< operator, } >
